{"version":3,"sources":["webpack:///./src/pages/live/index.js","webpack:///./node_modules/graphql-request/dist/src/types.js","webpack:///./node_modules/graphql-request/dist/src/index.js","webpack:///./node_modules/cross-fetch/dist/browser-polyfill.js"],"names":["styles","container","content","LiveIndex","props","_this","_React$Component","call","this","state","messages","storeMessages","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0___default","data","console","log","setState","componentDidMount","request","then","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","style","map","m","index","key","React","Component","extendStatics","__extends","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","ClientError","_super","response","message","extractMessage","JSON","stringify","Error","captureStackTrace","errors","e","status","__assign","assign","t","s","i","n","arguments","length","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__rest","indexOf","getOwnPropertySymbols","types_1","__webpack_require__","types_2","GraphQLClient","url","options","rawRequest","query","variables","_a","headers","others","headers_1","status_1","errorResult","_b","undefined","fetch","method","Content-Type","getResult","ok","error","setHeaders","setHeader","contentType","get","startsWith","json","text","default","self","support","searchParams","iterable","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","toString","Headers","append","name","normalizeName","normalizeValue","oldValue","has","set","forEach","callback","keys","items","iteratorFor","values","entries","methods","Request","clone","_bodyInit","Body","Response","statusText","type","redirectStatuses","redirect","RangeError","location","input","init","xhr","XMLHttpRequest","onload","rawHeaders","getAllResponseHeaders","replace","split","line","parts","shift","trim","join","responseURL","responseText","onerror","ontimeout","open","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","readAsText","chars","fromCharCode","readArrayBufferAsText","decode","parse","upcased","mode","toUpperCase","referrer","form","bytes","decodeURIComponent","bodyInit"],"mappings":"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","file":"component---src-pages-live-index-js-0d29429b02fb77cf15e3.js","sourcesContent":["import React from 'react';\nimport { request } from 'graphql-request';\nconst styles = {\n\tcontainer: {},\n\tcontent: {}\n};\n\nexport default class LiveIndex extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessages: [ { content: 'iam here' } ]\n\t\t};\n\t\tthis.storeMessages = this.storeMessages.bind(this);\n\t}\n\n\tstoreMessages(data) {\n\t\tconsole.log('this: ', this);\n\t\tthis.setState({ messages: data.messages });\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log('doing call');\n\t\tconst query = `query{\n            messages {\n                content\n            }\n        }`;\n\n\t\trequest('http://localhost:4000', query).then(this.storeMessages);\n\t}\n\n\trender() {\n\t\tconst { messages } = this.state;\n\t\tconsole.log('messages: ', messages);\n\t\treturn (\n\t\t\t<div style={styles.container}>\n\t\t\t\t<div style={styles.content}>{messages.map((m, index) => <p key={`p_${index}`}>{m.content}</p>)}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    function ClientError(response, request) {\n        var _this = this;\n        var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({ response: response, request: request });\n        _this = _super.call(this, message) || this;\n        _this.response = response;\n        _this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        /* tslint:disable-next-line */\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ClientError);\n        }\n        return _this;\n    }\n    ClientError.extractMessage = function (response) {\n        try {\n            return response.errors[0].message;\n        }\n        catch (e) {\n            return \"GraphQL Error (Code: \" + response.status + \")\";\n        }\n    };\n    return ClientError;\n}(Error));\nexports.ClientError = ClientError;\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"./types\");\nvar types_2 = require(\"./types\");\nexports.ClientError = types_2.ClientError;\nrequire(\"cross-fetch/polyfill\");\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, others, body, response, result, headers_1, status_1, errorResult;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, others = __rest(_a, [\"headers\"]);\n                        body = JSON.stringify({\n                            query: query,\n                            variables: variables ? variables : undefined,\n                        });\n                        return [4 /*yield*/, fetch(this.url, __assign({ method: 'POST', headers: Object.assign({ 'Content-Type': 'application/json' }, headers), body: body }, others))];\n                    case 1:\n                        response = _b.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _b.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            headers_1 = response.headers, status_1 = response.status;\n                            return [2 /*return*/, __assign({}, result, { headers: headers_1, status: status_1 })];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign({}, errorResult, { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.request = function (query, variables) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, others, body, response, result, errorResult;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, others = __rest(_a, [\"headers\"]);\n                        body = JSON.stringify({\n                            query: query,\n                            variables: variables ? variables : undefined,\n                        });\n                        return [4 /*yield*/, fetch(this.url, __assign({ method: 'POST', headers: Object.assign({ 'Content-Type': 'application/json' }, headers), body: body }, others))];\n                    case 1:\n                        response = _b.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _b.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            return [2 /*return*/, result.data];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign({}, errorResult, { status: response.status }), { query: query, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var headers = this.options.headers;\n        if (headers) {\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n        var _a;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\nfunction rawRequest(url, query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\nfunction request(url, query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(query, variables)];\n        });\n    });\n}\nexports.request = request;\nexports.default = request;\nfunction getResult(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contentType;\n        return __generator(this, function (_a) {\n            contentType = response.headers.get('Content-Type');\n            if (contentType && contentType.startsWith('application/json')) {\n                return [2 /*return*/, response.json()];\n            }\n            else {\n                return [2 /*return*/, response.text()];\n            }\n            return [2 /*return*/];\n        });\n    });\n}\n//# sourceMappingURL=index.js.map","(function(self) {\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue+','+value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push(name); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) { items.push(value); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push([name, value]); });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n"],"sourceRoot":""}