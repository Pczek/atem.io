{"version":3,"sources":["webpack:///./src/pages/live/index.js","webpack:///./node_modules/graphql-request/dist/src/types.js","webpack:///./node_modules/graphql-request/dist/src/index.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js","webpack:///./node_modules/cross-fetch/dist/browser-polyfill.js","webpack:///./node_modules/core-js/modules/es6.typed.data-view.js"],"names":["styles","container","content","LiveIndex","props","_this","_React$Component","call","this","state","messages","storeMessages","bind","_assertThisInitialized","data","console","log","setState","componentDidMount","request","then","render","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","style","map","m","index","key","React","Component","__webpack_require__","extendStatics","__extends","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","ClientError","_super","response","message","extractMessage","JSON","stringify","Error","captureStackTrace","errors","e","status","__assign","assign","t","s","i","n","arguments","length","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__rest","indexOf","getOwnPropertySymbols","types_1","types_2","GraphQLClient","url","options","rawRequest","query","variables","_a","headers","others","headers_1","status_1","errorResult","_b","undefined","fetch","method","Content-Type","getResult","ok","error","setHeaders","setHeader","contentType","get","startsWith","json","text","$export","toLength","context","$startsWith","F","searchString","that","Math","min","search","String","slice","self","support","searchParams","iterable","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","toString","Headers","append","name","normalizeName","normalizeValue","oldValue","has","set","forEach","callback","keys","items","iteratorFor","values","entries","methods","Request","clone","_bodyInit","Body","Response","statusText","type","redirectStatuses","redirect","RangeError","location","input","init","xhr","XMLHttpRequest","onload","rawHeaders","getAllResponseHeaders","replace","split","line","parts","shift","trim","join","responseURL","responseText","onerror","ontimeout","open","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","test","toLowerCase","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","readAsText","chars","fromCharCode","readArrayBufferAsText","decode","parse","upcased","mode","toUpperCase","referrer","form","bytes","decodeURIComponent","bodyInit","G","W","ABV"],"mappings":"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","file":"component---src-pages-live-index-js-c0f23150add520e412c5.js","sourcesContent":["import React from 'react';\nimport { request } from 'graphql-request';\nconst styles = {\n\tcontainer: {},\n\tcontent: {}\n};\n\nexport default class LiveIndex extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessages: [ { content: 'iam here' } ]\n\t\t};\n\t\tthis.storeMessages = this.storeMessages.bind(this);\n\t}\n\n\tstoreMessages(data) {\n\t\tconsole.log('this: ', this);\n\t\tthis.setState({ messages: data.messages });\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log('doing call');\n\t\tconst query = `query{\n            messages {\n                content\n            }\n        }`;\n\n\t\trequest('http://localhost:4000', query).then(this.storeMessages);\n\t}\n\n\trender() {\n\t\tconst { messages } = this.state;\n\t\tconsole.log('messages: ', messages);\n\t\treturn (\n\t\t\t<div style={styles.container}>\n\t\t\t\t<div style={styles.content}>{messages.map((m, index) => <p key={`p_${index}`}>{m.content}</p>)}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ClientError =\n/** @class */\nfunction (_super) {\n  __extends(ClientError, _super);\n\n  function ClientError(response, request) {\n    var _this = this;\n\n    var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({\n      response: response,\n      request: request\n    });\n    _this = _super.call(this, message) || this;\n    _this.response = response;\n    _this.request = request; // this is needed as Safari doesn't support .captureStackTrace\n\n    /* tslint:disable-next-line */\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_this, ClientError);\n    }\n\n    return _this;\n  }\n\n  ClientError.extractMessage = function (response) {\n    try {\n      return response.errors[0].message;\n    } catch (e) {\n      return \"GraphQL Error (Code: \" + response.status + \")\";\n    }\n  };\n\n  return ClientError;\n}(Error);\n\nexports.ClientError = ClientError;","\"use strict\";\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [0, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar types_1 = require(\"./types\");\n\nvar types_2 = require(\"./types\");\n\nexports.ClientError = types_2.ClientError;\n\nrequire(\"cross-fetch/polyfill\");\n\nvar GraphQLClient =\n/** @class */\nfunction () {\n  function GraphQLClient(url, options) {\n    this.url = url;\n    this.options = options || {};\n  }\n\n  GraphQLClient.prototype.rawRequest = function (query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, others, body, response, result, headers_1, status_1, errorResult;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, others = __rest(_a, [\"headers\"]);\n            body = JSON.stringify({\n              query: query,\n              variables: variables ? variables : undefined\n            });\n            return [4\n            /*yield*/\n            , fetch(this.url, __assign({\n              method: 'POST',\n              headers: Object.assign({\n                'Content-Type': 'application/json'\n              }, headers),\n              body: body\n            }, others))];\n\n          case 1:\n            response = _b.sent();\n            return [4\n            /*yield*/\n            , getResult(response)];\n\n          case 2:\n            result = _b.sent();\n\n            if (response.ok && !result.errors && result.data) {\n              headers_1 = response.headers, status_1 = response.status;\n              return [2\n              /*return*/\n              , __assign({}, result, {\n                headers: headers_1,\n                status: status_1\n              })];\n            } else {\n              errorResult = typeof result === 'string' ? {\n                error: result\n              } : result;\n              throw new types_1.ClientError(__assign({}, errorResult, {\n                status: response.status,\n                headers: response.headers\n              }), {\n                query: query,\n                variables: variables\n              });\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  GraphQLClient.prototype.request = function (query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, others, body, response, result, errorResult;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, others = __rest(_a, [\"headers\"]);\n            body = JSON.stringify({\n              query: query,\n              variables: variables ? variables : undefined\n            });\n            return [4\n            /*yield*/\n            , fetch(this.url, __assign({\n              method: 'POST',\n              headers: Object.assign({\n                'Content-Type': 'application/json'\n              }, headers),\n              body: body\n            }, others))];\n\n          case 1:\n            response = _b.sent();\n            return [4\n            /*yield*/\n            , getResult(response)];\n\n          case 2:\n            result = _b.sent();\n\n            if (response.ok && !result.errors && result.data) {\n              return [2\n              /*return*/\n              , result.data];\n            } else {\n              errorResult = typeof result === 'string' ? {\n                error: result\n              } : result;\n              throw new types_1.ClientError(__assign({}, errorResult, {\n                status: response.status\n              }), {\n                query: query,\n                variables: variables\n              });\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  GraphQLClient.prototype.setHeaders = function (headers) {\n    this.options.headers = headers;\n    return this;\n  };\n\n  GraphQLClient.prototype.setHeader = function (key, value) {\n    var headers = this.options.headers;\n\n    if (headers) {\n      headers[key] = value;\n    } else {\n      this.options.headers = (_a = {}, _a[key] = value, _a);\n    }\n\n    return this;\n\n    var _a;\n  };\n\n  return GraphQLClient;\n}();\n\nexports.GraphQLClient = GraphQLClient;\n\nfunction rawRequest(url, query, variables) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2\n      /*return*/\n      , client.rawRequest(query, variables)];\n    });\n  });\n}\n\nexports.rawRequest = rawRequest;\n\nfunction request(url, query, variables) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2\n      /*return*/\n      , client.request(query, variables)];\n    });\n  });\n}\n\nexports.request = request;\nexports[\"default\"] = request;\n\nfunction getResult(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contentType;\n    return __generator(this, function (_a) {\n      contentType = response.headers.get('Content-Type');\n\n      if (contentType && contentType.startsWith('application/json')) {\n        return [2\n        /*return*/\n        , response.json()];\n      } else {\n        return [2\n        /*return*/\n        , response.text()];\n      }\n\n      return [2\n      /*return*/\n      ];\n    });\n  });\n}","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.typed.data-view\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n(function (self) {\n  if (self.fetch) {\n    return;\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && function () {\n      try {\n        new Blob();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n    var isDataView = function isDataView(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj);\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name');\n    }\n\n    return name.toLowerCase();\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n\n    return value;\n  } // Build a destructive iterator for the value list\n\n\n  function iteratorFor(items) {\n    var iterator = {\n      next: function next() {\n        var value = items.shift();\n        return {\n          done: value === undefined,\n          value: value\n        };\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function () {\n        return iterator;\n      };\n    }\n\n    return iterator;\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function (value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function (name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function (name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ',' + value : value;\n  };\n\n  Headers.prototype['delete'] = function (name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function (name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null;\n  };\n\n  Headers.prototype.has = function (name) {\n    return this.map.hasOwnProperty(normalizeName(name));\n  };\n\n  Headers.prototype.set = function (name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function (callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function () {\n    var items = [];\n    this.forEach(function (value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items);\n  };\n\n  Headers.prototype.values = function () {\n    var items = [];\n    this.forEach(function (value) {\n      items.push(value);\n    });\n    return iteratorFor(items);\n  };\n\n  Headers.prototype.entries = function () {\n    var items = [];\n    this.forEach(function (value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items);\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'));\n    }\n\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function (resolve, reject) {\n      reader.onload = function () {\n        resolve(reader.result);\n      };\n\n      reader.onerror = function () {\n        reject(reader.error);\n      };\n    });\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise;\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise;\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n\n    return chars.join('');\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0);\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer;\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function (body) {\n      this._bodyInit = body;\n\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.\n\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type');\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function () {\n        var rejected = consumed(this);\n\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob);\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob');\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]));\n        }\n      };\n\n      this.arrayBuffer = function () {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer);\n        }\n      };\n    }\n\n    this.text = function () {\n      var rejected = consumed(this);\n\n      if (rejected) {\n        return rejected;\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob);\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text');\n      } else {\n        return Promise.resolve(this._bodyText);\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function () {\n        return this.text().then(decode);\n      };\n    }\n\n    this.json = function () {\n      return this.text().then(JSON.parse);\n    };\n\n    return this;\n  } // HTTP methods whose capitalization should be normalized\n\n\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method;\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read');\n      }\n\n      this.url = input.url;\n      this.credentials = input.credentials;\n\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n\n      this.method = input.method;\n      this.mode = input.mode;\n\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests');\n    }\n\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function () {\n    return new Request(this, {\n      body: this._bodyInit\n    });\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function (bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form;\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers(); // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers;\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function () {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    });\n  };\n\n  Response.error = function () {\n    var response = new Response(null, {\n      status: 0,\n      statusText: ''\n    });\n    response.type = 'error';\n    return response;\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function (url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code');\n    }\n\n    return new Response(null, {\n      status: status,\n      headers: {\n        location: url\n      }\n    });\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function (input, init) {\n    return new Promise(function (resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function () {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function () {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function () {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function (value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    });\n  };\n\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);","var $export = require('./_export');\n$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {\n  DataView: require('./_typed-buffer').DataView\n});\n"],"sourceRoot":""}